//=====================================================================
//
//２０２５年２月２４日：デコレータパターンを確かめる[main.h]
//Author:ShinaTaiyo
// 
// 概要：元のオブジェクトの振る舞いを変更せず、装飾的な機能を後付けできる。継承ではなく、コンポジションを利用して機能を拡張する。
// 利点：・既存のクラスを変更せずに拡張できる
//       ・柔軟に異なる機能を組み合わせられる
//=====================================================================

//==================================
//２重インクルード防止
//==================================
#ifndef _MAIN_H_
#define _MAIN_H_
//=====================================================================

//==================================
//インクルード
//==================================
#include <iostream>
//=====================================================================
using namespace std;

//==================================================
//メモリリーク検出用
//==================================================
#define _CRTDBG_MAP_ALLOC
#include <stdlib.h>
#include <crtdbg.h>

#ifdef _DEBUG
#define DBG_NEW new (_NORMAL_BLOCK , __FILE__, __LINE__)
// Replace _NORMAL_BLOCK with _CLIENT_BLOCK if you want the
// allocations to be of _CLIENT_BLOCK type
#else
#define DBG_NEW new
#endif


#endif
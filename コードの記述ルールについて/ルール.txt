■ファイルヘッダコメントは=============・・・で記述
■関数は関連するものは揃えて書く。それ以外は１行開ける
■イニシャライザ初期化時は初期化値の意味が分かりづらい時だけコメントを書く
■ケース文のコメントは上に書く
■コンストラクタ、デストラクタは"特殊関数"という名前でコメントする
■初期化終了更新描画などといった関数は、"ライフサイクル関数"という名前でコメントする。
■インクルード、静的メンバ宣言などは*****************・・・で記述
■関数内での処理のまとまりは、// === ○○ === で表す
■引数が長い関数は、引数を改行し、コメントを書く。関数の意図は、関数名の上に書く
■クラス内では、変数→関数の順に宣言
■ループ処理の条件分岐の中で{}が３つ以上になる場合、continueを用いる
■宣言する型は種類を揃える
■長さが同じくらいの関数や変数は並べてコメントの行も揃える。関連があって近くで宣言したい変数や関数で長さが異なる場合は仕方ない。長いやつは上にコメント書き、短いやつは横にコメントを書く
■public、protected、privateといったアクセス制限で分けた関数をcpp内に書くときは、
//===========================
//
// ○○メンバ
//
//===========================
と記述
■GetterとSetterはh内に書かない
■if文の処理の意図の記述はそれぞれ上側に書く
↓例

bool bGameOver = false; // ゲームオーバーになったかどうか

// まだゲームオーバーじゃないなら
if(bGameOver == false)
{
   Update(); // 更新

}
// ゲームオーバーなら
else
{
    NextScene(); // 次のシーンへ
}